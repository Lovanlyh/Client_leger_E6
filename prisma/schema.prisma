generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  email            String    @unique
  password         String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  avatar           String?
  bio              String?
  name             String?
  username         String?   @unique
  likes            Like[]
  receivedMessages Message[] @relation("ReceivedMessages")
  sentMessages     Message[] @relation("SentMessages")
  posts            Post[]    @relation("UserPosts")
  replies          Post[]    @relation("UserReplies")
}

model Post {
  id            String   @id @default(uuid())
  content       String
  imageUrl      String?
  authorId      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  parentId      String?
  replyAuthorId String?
  likes         Like[]
  author        User     @relation("UserPosts", fields: [authorId], references: [id], onDelete: Cascade)
  parent        Post?    @relation("PostReplies", fields: [parentId], references: [id])
  replies       Post[]   @relation("PostReplies")
  replyAuthor   User?    @relation("UserReplies", fields: [replyAuthorId], references: [id])
}

model Like {
  id        String   @id @default(uuid())
  userId    String
  createdAt DateTime @default(now())
  postId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
}

model Message {
  id          String   @id @default(uuid())
  content     String
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())
  senderId    String
  recipientId String
  recipient   User     @relation("ReceivedMessages", fields: [recipientId], references: [id], onDelete: Cascade)
  sender      User     @relation("SentMessages", fields: [senderId], references: [id], onDelete: Cascade)

  @@index([senderId])
  @@index([recipientId])
}
